{"version":3,"sources":["Loader.jsx","RepoView.jsx","MainView.jsx","hooks/useDebounce.js","App.js","index.js"],"names":["Loader","className","RepositoryPage","styled","div","RepositoryPageTitle","RepositoryPageHeader","span","ProfileImage","img","Description","RepoView","lastCommitDate","lastCommitDateString","useState","currentLoading","setCurrentLoading","currentRepo","setCurrentRepo","mostActiveContributors","setMostActiveContributors","currentError","setCurrentError","currentRepoId","useParams","useEffect","q","fetch","headers","Authorization","then","res","ok","json","contributors_url","resC","Date","updated_at","getDate","getMonth","getFullYear","getHours","getMinutes","name","owner","login","src","avatar_url","alt","stargazers_count","language","slice","map","contributor","key","id","description","SearchBar","input","ReposList","Repo","RepoTitle","GithubLink","a","Pagination","PaginationButton","props","isCurrentPage","MainView","query","setQuery","repos","setRepos","pages","setPages","currentPage","setCurrentPage","loading","setLoading","error","setError","debouncedQueryValue","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","reposList","items","repo","to","process","href","svn_url","pagesCount","Math","ceil","total_count","onChange","e","target","placeholder","Array","pageN","idx","onClick","Wrapper","LinkHome","App","path","exact","from","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.caf55191.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Loader.css'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='lds-dual-ring'>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst RepositoryPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  font-size: 1.5rem;\r\n  min-height: 75vh;\r\n  background-color: #2f4858;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst RepositoryPageTitle = styled.div`\r\n  font-size: 2rem;\r\n  color: #f26419;\r\n  text-align: center;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst RepositoryPageHeader = styled.span`\r\n  font-size: 2rem;\r\n  color: #f26419;\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  width: 100%;\r\n  max-width: 360px;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  padding: 1rem;\r\n`;\r\n\r\nconst RepoView = () => {\r\n  const [currentLoading, setCurrentLoading] = useState(false);\r\n  const [currentRepo, setCurrentRepo] = useState(null);\r\n  const [mostActiveContributors, setMostActiveContributors] = useState([]);\r\n  const [currentError, setCurrentError] = useState(false);\r\n\r\n  const params = useParams();\r\n  const currentRepoId = params.currentRepoId;\r\n\r\n  useEffect(() => {\r\n    const q = `https://api.github.com/repositories/${currentRepoId}`;\r\n    setCurrentLoading(true);\r\n    fetch(q, {\r\n      headers: {\r\n        Authorization: \"token ecb3455da3aab928cd06a9e8bfab728f8882a1c7\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          setCurrentError(true);\r\n          return;\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        setCurrentRepo(res);\r\n        setCurrentLoading(false);\r\n        if (res) {\r\n          fetch(res.contributors_url, {\r\n            headers: {\r\n              Authorization: \"token ecb3455da3aab928cd06a9e8bfab728f8882a1c7\",\r\n            },\r\n          })\r\n            .then((resC) => {\r\n              if (!resC.ok) {\r\n                setCurrentError(true);\r\n                return;\r\n              }\r\n              return resC.json();\r\n            })\r\n            .then((resC) => setMostActiveContributors(resC));\r\n        }\r\n      });\r\n  }, [currentRepoId]);\r\n\r\n  let lastCommitDate;\r\n  let lastCommitDateString;\r\n\r\n  if (currentRepo) {\r\n    lastCommitDate = new Date(currentRepo.updated_at);\r\n    lastCommitDateString = `${lastCommitDate.getDate()}.${lastCommitDate.getMonth()}.${lastCommitDate.getFullYear()} ${lastCommitDate.getHours()}:${lastCommitDate.getMinutes()}`;\r\n  }\r\n\r\n  return (\r\n      <RepositoryPage>\r\n        {currentError ? (\r\n          <div>Error</div>\r\n        ) : currentLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          currentRepo && (\r\n            <Fragment>\r\n              <RepositoryPageTitle>{currentRepo.name}</RepositoryPageTitle>\r\n              <div>\r\n                <RepositoryPageHeader>Nickname:</RepositoryPageHeader>{\" \"}\r\n                {currentRepo.owner.login}\r\n              </div>\r\n              <ProfileImage\r\n                src={currentRepo.owner.avatar_url}\r\n                alt=\"profile pic\"\r\n              ></ProfileImage>\r\n              <br></br>\r\n              <div>\r\n                <RepositoryPageHeader>Stars:</RepositoryPageHeader>{\" \"}\r\n                {currentRepo.stargazers_count}\r\n              </div>\r\n              <br></br>\r\n              <div>\r\n                <RepositoryPageHeader>Last commit:</RepositoryPageHeader>{\" \"}\r\n                {lastCommitDateString}\r\n              </div>\r\n              <br></br>\r\n              <div>\r\n                <RepositoryPageHeader>Languages list:</RepositoryPageHeader>{\" \"}\r\n                {currentRepo.language}\r\n              </div>\r\n              <br></br>\r\n              <RepositoryPageHeader>\r\n                Most active contributors:\r\n              </RepositoryPageHeader>\r\n              <ul>\r\n                {mostActiveContributors.slice(0, 10).map((contributor) => (\r\n                  <li key={contributor.id}>{contributor.login}</li>\r\n                ))}\r\n              </ul>\r\n              <br></br>\r\n              <RepositoryPageHeader>Description:</RepositoryPageHeader>{\" \"}\r\n              <Description>{currentRepo.description}</Description>\r\n            </Fragment>\r\n          )\r\n        )}\r\n      </RepositoryPage>\r\n  );\r\n};\r\n\r\nexport default RepoView;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDebounce } from \"./hooks/useDebounce\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst SearchBar = styled.input`\r\n  height: 2rem;\r\n  padding-left: 1rem;\r\n  background-color: #86bbd8;\r\n  color: #2f4858;\r\n  width: 100%;\r\n  &::placeholder {\r\n    color: #2f4858;\r\n    opacity: 0.8;\r\n  }\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst ReposList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  min-height: 75vh;\r\n`;\r\n\r\nconst Repo = styled.div`\r\n  padding: 2rem;\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  background-color: #2f4858;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst RepoTitle = styled.div`\r\n  font-size: 2rem;\r\n  color: #f26419;\r\n  cursor: pointer;\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst GithubLink = styled.a`\r\n  color: #86bbd8;\r\n`;\r\n\r\nconst Pagination = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst PaginationButton = styled.span`\r\n  display: inline-block;\r\n  background-color: ${(props) => (props.isCurrentPage ? \"#f6ae2d\" : \"#86bbd8\")};\r\n  color: #33658a;\r\n  font-size: 2rem;\r\n  width: 2rem;\r\n  text-align: center;\r\n  margin: 0.5rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst MainView = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [repos, setRepos] = useState([]);\r\n  const [pages, setPages] = useState([1]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const debouncedQueryValue = useDebounce(query, 300);\r\n\r\n  useEffect(() => {\r\n    const q = `https://api.github.com/search/repositories?q=${\r\n      debouncedQueryValue || \"stars:>0\"\r\n    }&sort=stars&order=desc&per_page=10&page=${currentPage}`;\r\n    setLoading(true);\r\n    fetch(q, {\r\n      headers: {\r\n        Authorization: \"token ecb3455da3aab928cd06a9e8bfab728f8882a1c7\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          setError(true);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        let reposList = res.items.map((repo) => {\r\n          const lastCommitDate = new Date(repo.updated_at);\r\n          const lastCommitDateString = `${lastCommitDate.getDate()}.${lastCommitDate.getMonth()}.${lastCommitDate.getFullYear()} ${lastCommitDate.getHours()}:${lastCommitDate.getMinutes()}`;\r\n          return (\r\n            <Repo key={repo.id}>\r\n              <Link to={`${process.env.PUBLIC_URL}/repos/${repo.id}`}>\r\n                <RepoTitle>{repo.name}</RepoTitle>\r\n              </Link>\r\n              <br></br>\r\n              Stars: {repo.stargazers_count}\r\n              <br></br>\r\n              Last commit: {lastCommitDateString}\r\n              <br></br>\r\n              <GithubLink href={repo.svn_url}>Github link</GithubLink>\r\n            </Repo>\r\n          );\r\n        });\r\n        setRepos(reposList);\r\n        let pagesCount = Math.ceil(res.total_count / 10);\r\n        if (pagesCount > 10) {\r\n          pagesCount = 10;\r\n        }\r\n        setPages(pagesCount);\r\n        setLoading(false);\r\n      });\r\n  }, [debouncedQueryValue, currentPage]);\r\n  return (\r\n    <Fragment>\r\n      <SearchBar\r\n        onChange={(e) => {\r\n          setCurrentPage(1);\r\n          setQuery(e.target.value);\r\n        }}\r\n        value={query}\r\n        placeholder=\"Enter text for a search\"\r\n      />\r\n      <ReposList>\r\n        {error ? (\r\n          <div>Error</div>\r\n        ) : loading ? (\r\n          <Loader></Loader>\r\n        ) : (\r\n          <div>{repos}</div>\r\n        )}\r\n      </ReposList>\r\n      <Pagination>\r\n        {[...Array(pages)].map((pageN, idx) => (\r\n          <PaginationButton\r\n            key={\"page\" + idx + 1}\r\n            onClick={() => setCurrentPage(idx + 1)}\r\n            isCurrentPage={idx + 1 === currentPage}\r\n          >\r\n            {idx + 1}\r\n          </PaginationButton>\r\n        ))}\r\n      </Pagination>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MainView;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { BrowserRouter, Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport RepoView from \"./RepoView\";\nimport MainView from \"./MainView\";\n\nimport \"./App.css\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 960px;\n  padding: 15px;\n  margin: 0 auto;\n  background-color: #33658a;\n  color: #f6ae2d;\n`;\nconst LinkHome = styled.div`\n  color: #f26419;\n  font-size: 2rem;\n  text-align: center;\n  text-decoration: underline;\n  padding: 2rem;\n  background-color: #2f4858;\n`;\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <BrowserRouter>\n        <Link to={`${process.env.PUBLIC_URL}/`}>\n          <LinkHome>Home page</LinkHome>\n        </Link>\n        <Switch>\n        <Route path={`${process.env.PUBLIC_URL}/`} exact>\n          <MainView />\n        </Route>\n        <Route path={`${process.env.PUBLIC_URL}/repos/:currentRepoId`}>\n          <RepoView />\n        </Route>\n        <Redirect from='*' to={`${process.env.PUBLIC_URL}`}/>\n        </Switch>\n      </BrowserRouter>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}